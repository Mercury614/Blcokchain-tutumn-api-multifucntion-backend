{"version":3,"file":"static/js/307.161d2b0a.chunk.js","mappings":"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","sources":["redux/action/report/index.js","views/gameManagement/index.js"],"sourcesContent":["import Config from 'config/index';\n\nexport const loadDashBoardData = async (data) => {\n\tconst response = await Config.Api.loadDashBoardData(data);\n\treturn response.data;\n}\n\nexport const getPlayerdata = async (data) => {\n\tconst response = await Config.Api.getPlayerdata(data);\n\treturn response.data;\n}\n\nexport const deletePlayerData = async (data) => {\n\tconst response = await Config.Api.deletePlayerData(data);\n\treturn response.data;\n}\n\nexport const getPlayerDetail = async (data) => {\n\tconst response = await Config.Api.getPlayerDetail(data);\n\treturn response.data;\n}\n\nexport const getRoundData = async(data) => {\n\tconst response = await Config.Api.getRoundData(data);\n\treturn response.data;\n}\n\nexport const deleteRoundData = async(data) => {\n\tconst response = await Config.Api.deleteRoundData(data);\n\treturn response.data;\n}\n\nexport const getRoundDetail = async(data) => {\n\tconst response = await Config.Api.getRoundDetail(data);\n\treturn response.data;\n}\n\nexport const bonusUser = async(data) => {\n\tconst response = await Config.Api.bonusUser(data);\n\treturn response.data;\n}","import { Box, Table, TableHead, TableRow, TableSortLabel, TableCell, TableBody, IconButton, TablePagination, Select, MenuItem } from \"@mui/material\";\nimport PropTypes from 'prop-types';\nimport { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { LoadingContext } from \"layout/Context/loading\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadDashBoardData, getRoundData, deleteRoundData } from \"redux/action/report\";\nimport { Delete, Visibility } from '@mui/icons-material';\nimport { useToasts } from 'react-toast-notifications';\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Link } from \"react-router-dom\";\n\nconst CHEF_FOODS = [\n\t'Burger',\n\t'Taco',\n\t'Salad',\n\t'Hotdog',\n\t'Chicken',\n\t'Pancakes',\n\t'French',\n\t'Sausage',\n\t'Spaghetti'\n];\n\nconst useStyles = makeStyles(() => ({\n    GameContainer: {\n        background: '#fff',\n        borderRadius: '3px',\n        borderTop: '3px solid #d2d6de',\n        boxShadow: '0 1px 1px rgb(0 0 0 / 10%)',\n        marginBottom: '20px',\n        position: 'relative',\n        width: '100%',\n    },\n    TableTitleBox: {\n        color: '#444',\n        padding: '10px',\n        position: 'relative',\n        display: 'inline-block',\n        fontSize: '18px',\n        lineHeight: '1',\n    },\n    TableMainBox: {\n        padding: '10px',\n        width: '100%'\n    },\n    TableHeaderCell: {\n        background: 'rgb(231, 235, 240)',\n        padding: '8px'\n    },\n    ActionButton: {\n        padding: '3px'\n    },\n    TableRow: {\n        \"&>.MuiTableCell-root\": {\n            padding: '6px'\n        }\n    },\n    ActionCell: {\n        width: '25px'\n    }\n}));\n\nconst headCells = [\n    { value: 'Number', label: 'Number', ischeck: true },\n    { value: 'result', label: 'Chef Food', ischeck: true },\n    { value: 'players', label: 'Players', ischeck: true },\n    { value: 'profit', label: 'Chef Profit', ischeck: true },\n    { value: 'state', label: 'State', ischeck: true },\n    { value: 'detail', label: 'Detail', ischeck: false },\n    { value: 'delete', label: 'Delete', ischeck: false }\n];\n\nconst EnhancedTableHead = (props) => {\n    let { order, orderBy, onRequestSort } = props;\n    const classes = useStyles();\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell, key) => (\n                    <TableCell key={key} className={classes.TableHeaderCell}>\n                        {\n                            headCell.ischeck ?\n                                <TableSortLabel\n                                    active={orderBy === headCell.value}\n                                    direction={orderBy === headCell.value ? order : 'asc'}\n                                    onClick={() => onRequestSort(headCell.value)}\n                                >\n                                    {headCell.label}\n                                </TableSortLabel>\n                                :\n                                <>{headCell.label}</>\n                        }\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nEnhancedTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n};\n\nconst GameManagement = () => {\n    const classes = useStyles();\n    const { showLoading, hideLoading } = useContext(LoadingContext);\n    const userAuth = useSelector((state) => state.userAuth);\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n\n    const [order, setOrder] = useState('asc');\n    const [orderBy, setOrderBy] = useState('createdAt');\n    const [data, setData] = useState([]);\n\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [page, setPage] = useState(0);\n    const [totalRows, setTotalRows] = useState(0);\n\n    useEffect(() => {\n        init()\n    }, [dispatch, rowsPerPage, page]);\n\n    const init = async () => {\n        showLoading();\n        const userId = userAuth?.userData?._id;\n        const response = await loadDashBoardData({ id: userId });\n        if (response.status) {\n            setTotalRows(Number(response.round_count));\n            const requestData = {\n                id: userId,\n                offset: page,\n                count: rowsPerPage\n            }\n            const response1 = await getRoundData(requestData);\n            if (response1.status) {\n                setData(response1.round_data);\n            }\n        }\n        hideLoading();\n    };\n\n    const handleRequestSort = (property) => {\n        let tempProperty = property;\n        const isAsc = orderBy === tempProperty && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(tempProperty);\n    };\n\n    const handlePageChange = (value) => {\n        setPage(value - 1)\n    };\n\n    const changePerPage = (value) => {\n        setRowsPerPage(value);\n    };\n\n    const handleDelete = async (id) => {\n        confirmAlert({\n            title: '',\n            message: 'Do you really want to remove this game?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: async () => {\n                        showLoading();\n                        const userId = userAuth?.userData?._id;\n                        const response = await deleteRoundData({ id: userId, round_uuid: id });\n                        if (response.status) {\n                            addToast(response.message, { appearance: 'success', autoDismiss: true });\n                            init();\n                        }\n                        else {\n                            addToast(response.message, { appearance: 'error', autoDismiss: true });\n                        }\n                        hideLoading();\n                    }\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        })\n    };\n\n    const handleDetail = () => {\n        dispatch({ type: 'SET_MENU_PATH', data: '/game/game-detail' });\n    };\n\n    return (\n        <Box className={classes.GameContainer}>\n            <Box className={classes.TableTitleBox}>\n                All Games\n            </Box>\n            <Box className={classes.TableMainBox}>\n                <Table>\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                    />\n                    <TableBody>\n                        {\n                            data?.map((item) => (\n                                <TableRow key={item.uuid} className={classes.TableRow}>\n                                    <TableCell>\n                                        {item.number.toString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CHEF_FOODS[item.result]}\n                                    </TableCell>\n                                    <TableCell>\n                                        {item.players.toString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        {Number(item.profit).toFixed(2)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {item.state}\n                                    </TableCell>\n                                    <TableCell className={classes.ActionCell}>\n                                        <Link to={`/game/game-detail?id=${item.uuid}`}>\n                                            <IconButton onClick={handleDetail} color=\"primary\" aria-label=\"upload picture\" component=\"span\" className={classes.ActionButton}>\n                                                <Visibility />\n                                            </IconButton>\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell className={classes.ActionCell}>\n                                        <IconButton onClick={() => handleDelete(item.uuid)} color=\"primary\" aria-label=\"upload picture\" component=\"span\" className={classes.ActionButton}>\n                                            <Delete />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    component=\"div\"\n                    count={totalRows}\n                    onPageChange={(e, v) => handlePageChange(v + 1)}\n                    onRowsPerPageChange={(e) => changePerPage(e.target.value)}\n                    page={page}\n                    rowsPerPage={rowsPerPage}\n                    rowsPerPageOptions={[10, 25, 50]}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nexport default GameManagement;"],"names":["loadDashBoardData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","response","wrap","_context","prev","next","Config","Api","sent","abrupt","stop","_x","apply","arguments","getPlayerdata","_ref2","_callee2","_context2","_x2","deletePlayerData","_ref3","_callee3","_context3","_x3","getPlayerDetail","_ref4","_callee4","_context4","_x4","getRoundData","_ref5","_callee5","_context5","_x5","deleteRoundData","_ref6","_callee6","_context6","_x6","getRoundDetail","_ref7","_callee7","_context7","_x7","bonusUser","_ref8","_callee8","_context8","_x8","CHEF_FOODS","useStyles","makeStyles","GameContainer","background","borderRadius","borderTop","boxShadow","marginBottom","position","width","TableTitleBox","color","padding","display","fontSize","lineHeight","TableMainBox","TableHeaderCell","ActionButton","TableRow","ActionCell","headCells","value","label","ischeck","EnhancedTableHead","props","order","orderBy","onRequestSort","classes","_jsx","TableHead","children","map","headCell","key","TableCell","className","TableSortLabel","active","direction","onClick","_Fragment","_useContext","useContext","LoadingContext","showLoading","hideLoading","userAuth","useSelector","state","dispatch","useDispatch","addToast","useToasts","_useState","useState","_useState2","_slicedToArray","setOrder","_useState3","_useState4","setOrderBy","_useState5","_useState6","setData","_useState7","_useState8","rowsPerPage","setRowsPerPage","_useState9","_useState10","page","setPage","_useState11","_useState12","totalRows","setTotalRows","useEffect","init","_userAuth$userData","userId","requestData","response1","userData","_id","id","status","Number","round_count","offset","count","round_data","handleDelete","confirmAlert","title","message","buttons","_onClick","_userAuth$userData2","round_uuid","appearance","autoDismiss","handleDetail","type","_jsxs","Box","Table","property","tempProperty","TableBody","item","number","toString","result","players","profit","toFixed","Link","to","concat","uuid","IconButton","component","Visibility","Delete","TablePagination","onPageChange","e","v","onRowsPerPageChange","target","rowsPerPageOptions"],"sourceRoot":""}