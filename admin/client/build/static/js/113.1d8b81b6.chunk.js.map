{"version":3,"file":"static/js/113.1d8b81b6.chunk.js","mappings":"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","sources":["views/auth/changePassword.js"],"sourcesContent":["import { Box, Button, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useState, useContext } from \"react\";\nimport { changePassword } from \"redux/action/auth\";\nimport { useSelector } from \"react-redux\";\nimport { useToasts } from 'react-toast-notifications';\nimport { LoadingContext } from \"layout/Context/loading\";\n\nconst useStyles = makeStyles(() => ({\n    ChangePassContainer: {\n        width: '100%',\n        padding: '10px',\n        borderTop: 'solid 3px #3c8dbc',\n        backgroundColor: '#FFF'\n    },\n    InputContainer: {\n        width: '100%',\n        marginBottom: '10px',\n    },\n    FormInput: {\n        width: '100%',\n        height: '34px',\n        color: '#555',\n        fontSize: '14px',\n        padding: '6px 12px',\n        border: 'solid 1px #d2d6de',\n        \"&:focus\": {\n            outline: 'none'\n        }\n    }\n}));\n\nconst ChangePassword = () => {\n    const classes = useStyles();\n    const userAuth = useSelector((state) => state.userAuth);\n    const { addToast } = useToasts();\n    const { showLoading, hideLoading } = useContext(LoadingContext);\n\n    const [formData, setFormData] = useState({\n        oldPass: '',\n        newPass: '',\n        conPass: ''\n    });\n\n    const handleInputFormData = (value, key) => {\n        let tempData = formData;\n        tempData[key] = value;\n        setFormData({ ...tempData });\n    }\n\n    const handleSubmit = async () => {\n        showLoading();\n\n        if(formData.newPass === formData.conPass) {\n            if(formData.newPass !== formData.oldPass) {\n                const requestData = {\n                    id: userAuth.userData._id,\n                    old_pwd: formData.oldPass,\n                    new_pwd: formData.newPass\n                };\n                const response = await changePassword(requestData);\n                if(response.status === 'fail') {\n                    addToast(response.message, { appearance: 'error', autoDismiss: true });\n                }\n                else {\n                    addToast('Congratulation. Password successfully changed!', { appearance: 'success', autoDismiss: true });\n                }\n            }\n            else {\n                addToast('New password should be different with old password', { appearance: 'error', autoDismiss: true });\n            }\n        }\n        else {\n            addToast('Please confirm new password again.', { appearance: 'error', autoDismiss: true });\n        }\n\n        hideLoading();\n    };\n\n    return (\n        <Grid container className={classes.ChangePassContainer}>\n            <Box className={classes.InputContainer}>\n                <input className={classes.FormInput} type='password' value={formData.oldPass} onChange={(e) => handleInputFormData(e.target.value, 'oldPass')} placeholder=\"Old Password\" />\n            </Box>\n            <Box className={classes.InputContainer}>\n                <input className={classes.FormInput} type='password' value={formData.newPass} onChange={(e) => handleInputFormData(e.target.value, 'newPass')} placeholder=\"New Password\" />\n            </Box>\n            <Box className={classes.InputContainer}>\n                <input className={classes.FormInput} type='password' value={formData.conPass} onChange={(e) => handleInputFormData(e.target.value, 'conPass')} placeholder=\"Confirm Password\" />\n            </Box>\n            <Grid item>\n                <Button variant=\"contained\" onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ChangePassword;"],"names":["useStyles","makeStyles","ChangePassContainer","width","padding","borderTop","backgroundColor","InputContainer","marginBottom","FormInput","height","color","fontSize","border","outline","classes","userAuth","useSelector","state","addToast","useToasts","_useContext","useContext","LoadingContext","showLoading","hideLoading","_useState","useState","oldPass","newPass","conPass","_useState2","_slicedToArray","formData","setFormData","handleInputFormData","value","key","tempData","_objectSpread","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestData","response","wrap","_context","prev","next","id","userData","_id","old_pwd","new_pwd","changePassword","sent","status","message","appearance","autoDismiss","stop","apply","arguments","_jsxs","Grid","container","className","children","_jsx","Box","type","onChange","e","target","placeholder","item","Button","variant","onClick"],"sourceRoot":""}