{"version":3,"file":"static/js/551.d792dfda.chunk.js","mappings":"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","sources":["views/auth/login.js"],"sourcesContent":["import { Box, Button, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useState, useContext } from \"react\";\nimport { userLogin } from \"redux/action/auth\";\nimport { useToasts } from 'react-toast-notifications';\nimport { LoadingContext } from \"layout/Context/loading\";\nimport Config from \"config/index\";\n\nconst useStyles = makeStyles(() => ({\n    LoginContainer: {\n        display: 'flex',\n        width: '100vw',\n        height: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ecf0f5'\n    },\n    FormBox: {\n        width: '360px',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        padding: '20px',\n        backgroundColor: '#FFF',\n        boxShadow: '0 0 4px #a3a3a3'\n    },\n    InputContainer: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    FormInput: {\n        width: '100%',\n        height: '34px',\n        color: '#555',\n        fontSize: '14px',\n        padding: '6px 12px',\n        border: 'solid 1px #d2d6de',\n        \"&:focus\": {\n            outline: 'none'\n        }\n    },\n    ActionBox: {\n        alignItems: 'center'\n    },\n    CenterText: {\n        textAlign: 'center'\n    }\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n    const { addToast } = useToasts();\n    const { showLoading, hideLoading } = useContext(LoadingContext);\n\n    const [formData, setFormData] = useState({\n        userName: '',\n        password: ''\n    });\n    const [rememberMe, setRemeberMe] = useState(1);\n\n    const handleFormData = (data, field) => {\n        let tempData = formData;\n        tempData[field] = data;\n        setFormData({ ...tempData });\n    };\n\n    const handleSignin = async () => {\n        showLoading();\n        if (formData.userName !== '') {\n            if (formData.password !== '') {\n                const requestData = {\n                    admin_id: formData.userName,\n                    admin_pwd: formData.password\n                };\n\n                const response = await userLogin(requestData);\n                if (response.status) {\n                    Config.Api.setToken(response.data.token);\n                    addToast('Login success', { appearance: 'success', autoDismiss: true });\n                    setTimeout(() => {\n                        window.location.assign('/')\n                    }, 500);\n                }\n                else {\n                    addToast(response.message, { appearance: 'error', autoDismiss: true });\n                }\n            }\n            else {\n                addToast('Please input password', { appearance: 'error', autoDismiss: true });\n            }\n        }\n        else {\n            addToast('Please input userName', { appearance: 'error', autoDismiss: true });\n        }\n\n        hideLoading();\n    }\n\n    return (\n        <Box className={classes.LoginContainer}>\n            <Box className={classes.FormBox}>\n                <Box className={classes.InputContainer}>\n                    <p className={classes.CenterText}>Sign in to start your session</p>\n                </Box>\n                <Box className={classes.InputContainer}>\n                    <input type='text' placeholder='User Name' value={formData.userName} onChange={(e) => handleFormData(e.target.value, 'userName')} className={classes.FormInput} />\n                </Box>\n                <Box className={classes.InputContainer}>\n                    <input autoComplete=\"off\" type='password' placeholder='Password' value={formData.password} onChange={(e) => handleFormData(e.target.value, 'password')} className={classes.FormInput} />\n                </Box>\n                <Grid container className={classes.ActionBox}>\n                    <Grid item xs={8}>\n                        <label>\n                            <input type='checkbox' value={rememberMe} onChange={(e) => setRemeberMe(e.target.value)} /> Remember Me\n                        </label>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Button variant=\"contained\" onClick={handleSignin}>Sign In</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Login;"],"names":["useStyles","makeStyles","LoginContainer","display","width","height","alignItems","justifyContent","backgroundColor","FormBox","flexDirection","padding","boxShadow","InputContainer","marginBottom","FormInput","color","fontSize","border","outline","ActionBox","CenterText","textAlign","classes","addToast","useToasts","_useContext","useContext","LoadingContext","showLoading","hideLoading","_useState","useState","userName","password","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","rememberMe","setRemeberMe","handleFormData","data","field","tempData","_objectSpread","handleSignin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestData","response","wrap","_context","prev","next","admin_id","admin_pwd","userLogin","sent","status","Config","Api","setToken","token","appearance","autoDismiss","setTimeout","window","location","assign","message","stop","apply","arguments","_jsx","Box","className","children","_jsxs","type","placeholder","value","onChange","e","target","autoComplete","Grid","container","item","xs","Button","variant","onClick"],"sourceRoot":""}